server {
    listen 80;
    server_name *.c.coderpie.com;

    expires off;
    access_log logs/access_console.log;
    error_log  logs/error_console.log warn;
    keepalive_timeout 65;

    error_page 400 = /assets/400.html;
    error_page 404 = /assets/404.html;
    error_page 500 = /assets/500.html;
    error_page 502 = /assets/502.html;
    error_page 503 504 = /assets/50x.html;

    location / {
        resolver 8.8.8.8;  # use Google's open DNS server

        set_by_lua $user_name '
        s = ngx.var.host
            return tostring(ngx.var.scheme) .. tostring("://") .. tostring(ngx.var.host)
        ';

        set $target '';
        access_by_lua '
            local key = tostring(ngx.var.user_name)

            local redis = require "resty.redis"
            local red = redis:new()

            red:set_timeout(1000) -- 1 second

            local ok, err = red:connect("13.0.0.3", 6379)
            if not ok then
                ngx.log(ngx.ERR, "failed to connect to redis: ", err)
                return ngx.exit(500)
            end

            local res, err = red:auth("YCTACMmimohBBiZRanibCnjJV8zdnwGs")
            if not res then
            ngx.say("failed to authenticate: ", err)
                return
            end

            local host, err = red:get(key)
            if not host then
                ngx.log(ngx.ERR, "failed to get redis key: ", err)
                return ngx.exit(500)
            end

            if host == ngx.null then
                ngx.log(ngx.ERR, "no host found for key ", key)
                return ngx.exit(400)
            end

            ngx.var.target = host
            local sock = ngx.socket.tcp()
            local ook, errr = sock:connect(host)
            if not ook then
                ngx.sleep(0.15)
            end
            local ook, errr = sock:connect(host)
            if not ook then
                ngx.sleep(1)
            end
        ';
        proxy_pass $target;
        proxy_read_timeout 7200;
        proxy_send_timeout 7200;
        proxy_connect_timeout 7200;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        add_header Cache-Control no-store;
    }

    # System Error assets files
    location /assets/ {
        root /usr/local/openresty/nginx/html/;
        add_header Cache-Control no-store;
    }
}
